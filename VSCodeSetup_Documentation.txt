Section 1: Install VS Code Extensions (Ctrl+Shift+X)

# Extension for connecting to WSL:
WSL

# Extensions for working with Python environments:
Python + Extension Pack (3)
	Pylance
	Python Debugger
	Python Environments

# Extensions for working with Jupyter Notebook environments:
Jupyter + Extension Pack (4)
	Jupyter Cell Tags
	Jupyter Keymap
	Jupyter Notebook Renderers
	Jupyter Slide Show

# Extensions for setting up and maintaining secure shell (SSH) connections to work on codebase remotely or on mobile:
Remote - SSH + Extension Pack (2)
	Remote - SSH: Editing Configuration Files
	Remote Explorer

# OPTIONAL Extensions:
	Makefile Tools
	PowerShell
	GitHub Copilot
	GitHub Copilot Chat

-----------------------------------------------------------------------------------------------------------------------
Section 2: Connect to WSL from VS Code

1. Open Command Palette (Ctrl+Shift+P or F1)
2. Search "WSL: Connect to WSL"
3. Press Enter

-----------------------------------------------------------------------------------------------------------------------
Section 3: Setup Workspace in Explorer (Ctrl+Shift+E)

1. File > Open Folder...
2. /home/<your-linux-username>
3. Press OK
4. File > Save Workspace As...
5. /home/<your-linux-username>/<your-workspace-name>.code-workspace
6. Press OK

-----------------------------------------------------------------------------------------------------------------------
Section 4: Install conda-forge Distribution of Python using Miniforge Installer in Terminal (Ctrl+Shift+`)

# Download Miniforge.
wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh

# Install Miniforge.
bash Miniforge3-Linux-x86_64.sh
bash Miniforge3-Linux-aarch64.sh

# Restart shell session.
source ~/.bashrc

-----------------------------------------------------------------------------------------------------------------------
Section 5: Setup (compas_py) conda Environment in Terminal (Ctrl+Shift+`)

# Disable automatic activation of (base) conda environment.
conda config --set auto_activate false

# Create new (compas_py) conda environment.
conda create -n compas_py

# Append (compas_py) environment activation script to .bashrc file
# to enable automatic activation of (compas_py) conda environment.
echo 'conda activate compas_py' >> ~/.bashrc

# IF Python extension is installed:
# 1. Open VS Code Settings (Ctrl + ,)
# 2. Search "python.terminal.activateEnvironment"
# 3. Disable "Python > Terminal: Activate Environment"

# IF Pylance extension is installed (typically installed with Python extension):
# 1. Open Command Palette (Ctrl+Shift+P or F1)
# 2. Search "Python: Select Interpreter"
# 3. Select "Python <version#> (compas_py) ./miniforge3/envs/compas_py/bin/python"

# Restart shell session.
source ~/.bashrc

-----------------------------------------------------------------------------------------------------------------------
Section 6: Install Python Modules

# Install Python package installer (pip):
conda install pip

# Install required Python modules:

pip install astropy
pip install numpy
pip install scipy

pip install h5py
pip install matplotlib

-----------------------------------------------------------------------------------------------------------------------
Section 7: Writing & Running Jupyter Notebooks

1. Create folder in Linux home directory for Jupyter Notebooks.
2. File > New File... 
3. <your-filename>.ipynb
4. Select newly created file to open.
5. In the top-right section of notebook, choose "Select Kernel" or "Detecting Kernels".
6. Select Kernel > Python Environments... > compas_py (Python <version#>) miniforge3/envs/compas_py/bin/python 
